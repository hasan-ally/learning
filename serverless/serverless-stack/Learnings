Keep lambdas warm using scheduled functions - https://github.com/FidelLimited/serverless-plugin-warmup
Special request which doesn't need to complete full request path

AWS Lambda:
Memory: 128MB - 3008MB - CPU proportional
Ephemeral disk space: 512MB at /tmp
Max execution duration: 300 seconds or 5 minutes
Compressed package size: 50MB including node_modules/
Uncompressed package size: 250MB


exports.myHandler = function(event, context, callback) {
  // do stuff
  callbacks( Error error, Object result);
}

Lambda functions need to be packaged (compress & send to S3)

Won't be handling concurrent requests in our code as each request is handled by single instance of lambda function.

VPCs in AWS Lambda slows cold start by 10s (TODO: Check if this is still true)

Node v8.10


https://github.com/AnomalyInnovations/serverless-nodejs-starter
https://github.com/dherault/serverless-offline
yarn - https://github.com/serverless-heaven/serverless-webpack
jest
eslint
prettier - https://github.com/postlight/serverless-babel-starter


Code Coverage: https://github.com/gotwarlost/istanbul
Search for most common libraries for serverless, nodejs, express
ORM for DynamoDB



READ:
https://serverless.com/blog/serverless-express-rest-api/
https://serverless.com/blog/make-serverless-graphql-api-using-lambda-dynamodb/


Autogenerate the API Documentation


stages: dev, beta, prod


API Gateway
* Usage plans
* Caching
* Authorizers
* Stages & Version aliases
* SDK Generation
* API Monitoring

Integrate some error tracking tool

GraphQL versioning may not be required but use it for being future proof
https://www.apollographql.com/docs/guides/
https://graphql.org/learn/
https://aws-amplify.github.io/amplify-js/media/api_guide.html
https://aws-amplify.github.io/amplify-js/media/react_guide
https://www.howtographql.com/react-apollo/0-introduction/

Enable CSP

Use Encryption At Rest everywhere

https://docs.aws.amazon.com/lambda/latest/dg/best-practices.html
https://d1.awsstatic.com/whitepapers/serverless-architectures-with-aws-lambda.pdf
https://medium.com/@mayconbordin/lessons-learned-building-a-large-serverless-project-on-aws-74d40f5b0b46
Split serverless.yml
Add plugins to handle limits on IAM policy size (serverless-plugin-custom-roles) and CloudFormation stack size (serverless-plugin-split-stacks)
Don't use nested stacks - serverless-dependson-plugin

Read
https://medium.com/@PaulDJohnston/serverless-best-practices-b3c97d551535
* Each function should do only one thing - no switch statements
* One function per route - no proxy in the middle
* Functions don't call another function - push to data store or queue and let it take from there
* Use a library only if you must and need all of it - no too express
* Serverless works best with services than connections - no to RDBMS (To use RDBMS put a service that handles connection pooling in the middle)
* Use messages & queues - not request-response cycles
* Data flow rather than data lakes - no querying from data lakes
* Don't run resources in a private VPC


Use Kinesis for queue (Instead of SQS)
Allow as much RAM as your wallet can allow. Decreasing RAM lowers both performance and bill (CPU grows with RAM)
- Regularly do a cost analysis by calculating time on different RAM and picking the best


READ:
DynamoDB partitioning - for scaling without having a single hot partition
Using X-Ray for serverless

Serverless/plugins
- serverless-appsync-plugin
- serverless-dynamodb-autoscaling
- serverless-plugin-typescript
- serverless-plugin-warmup
- serverless-webpack


Parallelize the initialization - before the callback in each serverless function


Import/Require only the recommended packages
const aws = require('aws-sdk/global'); // Instead of const aws = require('aws-sdk');
const dynamodb = require('aws-sdk/clients/dynamodb');

Use AWS KMS for storing all secrets


Use Netlify to host React static pages

Write your application code assuming you would move to koa or similar framework later


Use AirBnB javascript guide for react
https://github.com/airbnb/javascript/tree/master/react
https://blog.echobind.com/integrating-prettier-eslint-airbnb-style-guide-in-vscode-47f07b5d7d6a

Sample Projects
https://github.com/aws-samples?q=react


Alternative to immutable.js - eslint-plugin-fp
Use flow type checking


How to restrict cognito to a list of domains

Use SCSS for styles
Folder structure for react apps


Have all validations on server side also

material-admin https://github.com/marmelab/react-admin
material-ui https://material-ui.com/
https://www.creative-tim.com/product/material-kit-react?partner=104080


Form
https://github.com/erikras/redux-form
